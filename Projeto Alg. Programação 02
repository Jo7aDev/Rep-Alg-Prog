#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_PRODUTOS 100
#define MAX_MARCAS 100

typedef struct {
  char descricao[100];
  float peso;
  float valorCompra;
  float valorVenda;
  float lucro;
  float percentualLucro;
  char fabricante[50];
  char estado[3];
} Produto;

typedef struct {
  char nome[50];
  char site[100];
  char telefone[15];
  char uf[3];
} Marca;

Produto produtos[MAX_PRODUTOS];
Marca marcas[MAX_MARCAS];
int numProdutos = 0;
int numMarcas = 0;

void limparTela() {
  system("clear || cls");
}

void aguardarEnter() {
  printf("\nPressione Enter para continuar...");
  getchar();
  getchar();
}

void adicionarProduto() {
  limparTela();

  if (numProdutos == MAX_PRODUTOS) {
    printf("Limite de produtos atingido. Nao e possivel adicionar mais produtos.\n");
    aguardarEnter();
    return;
  }

  Produto novoProduto;

  printf("==============================================================\n");
  printf("Adicionar Produto\n");
  printf("==============================================================\n\n");
  printf("Digite a descricao do produto: ");
  fgets(novoProduto.descricao, 100, stdin);
  novoProduto.descricao[strcspn(novoProduto.descricao, "\n")] = '\0';

  printf("Digite o peso do produto: ");
  scanf("%f", &novoProduto.peso);

  printf("Digite o valor de compra do produto: ");
  scanf("%f", &novoProduto.valorCompra);

  printf("Digite o valor de venda do produto: ");
  scanf("%f", &novoProduto.valorVenda);

  novoProduto.lucro = novoProduto.valorVenda - novoProduto.valorCompra;
  novoProduto.percentualLucro = (novoProduto.lucro / novoProduto.valorCompra) * 100;

  getchar();

  printf("Digite a marca do produto: ");
  fgets(novoProduto.fabricante, 50, stdin);
  novoProduto.fabricante[strcspn(novoProduto.fabricante, "\n")] = '\0';

  printf("Digite o estado do produto: ");
  fgets(novoProduto.estado, 3, stdin);
  novoProduto.estado[strcspn(novoProduto.estado, "\n")] = '\0';

  produtos[numProdutos] = novoProduto;
  numProdutos++;

  printf("\nProduto adicionado com sucesso!\n");
  aguardarEnter();
}

void adicionarFabricante() {
  limparTela();

  if (numMarcas == MAX_MARCAS) {
    printf("Limite de marcas atingido. Nao e possivel adicionar mais fabricantes.\n");
    aguardarEnter();
    return;
  }

  Marca novaMarca;

  printf("==============================================================\n");
  printf("Adicionar Fabricante\n");
  printf("==============================================================\n\n");
  printf("Digite o nome do fabricante: ");
  fgets(novaMarca.nome, 50, stdin);
  printf("Digite o site do fabricante: ");
  fgets(novaMarca.site, 100, stdin);
  printf("Digite o telefone do fabricante: ");
  fgets(novaMarca.telefone, 15, stdin);
  printf("Digite o UF do fabricante: ");
  fgets(novaMarca.uf, 3, stdin);
  novaMarca.nome[strcspn(novaMarca.nome, "\n")] = '\0';

  marcas[numMarcas] = novaMarca;
  numMarcas++;

  printf("\nFabricante adicionado com sucesso!\n");
  aguardarEnter();
}

void listarProdutos() {
  limparTela();

  printf("==============================================================\n");
  printf("Lista de Produtos\n");
  printf("==============================================================\n\n");

  if (numProdutos == 0) {
    printf("Nenhum produto cadastrado.\n");
  } else {
  	int i;
    for (i = 0; i < numProdutos; i++) {
      Produto produto = produtos[i];

      printf("Produto %d:\n", i + 1);
      printf("Descricao: %s\n", produto.descricao);
      printf("Peso: %.2f kg\n", produto.peso);
      printf("Valor de compra: R$ %.2f\n", produto.valorCompra);
      printf("Valor de venda: R$ %.2f\n", produto.valorVenda);
      printf("Lucro: R$ %.2f\n", produto.lucro);
      printf("Percentual de lucro: %.2f%%\n", produto.percentualLucro);
      printf("Fabricante: %s\n", produto.fabricante);
      printf("Estado: %s\n\n", produto.estado);
    }
  }

  aguardarEnter();
}

void listarMarcas() {
  limparTela();

  printf("==============================================================\n");
  printf("Lista de Fabricantes\n");
  printf("==============================================================\n\n");

  if (numMarcas == 0) {
    printf("Nenhum fabricante cadastrado.\n");
  } else {
  	int i;
    for (i = 0; i < numMarcas; i++) {
      printf("Fabricante %d: %s\n", i + 1, marcas[i].nome);
    }
  }

  aguardarEnter();
}

void listarProdutosEstado(const char* estado) {
  limparTela();

  printf("==============================================================\n");
  printf("Lista de Produtos por Estado\n");
  printf("==============================================================\n\n");

  int encontrados = 0;
  int i;

  for (i = 0; i < numProdutos; i++) {
    Produto produto = produtos[i];

    if (strcmp(produto.estado, estado) == 0) {
      printf("Produto %d:\n", i + 1);
      printf("Descricao: %s\n", produto.descricao);
      printf("Peso: %.2f kg\n", produto.peso);
      printf("Valor de compra: R$ %.2f\n", produto.valorCompra);
      printf("Valor de venda: R$ %.2f\n", produto.valorVenda);
      printf("Lucro: R$ %.2f\n", produto.lucro);
      printf("Percentual de lucro: %.2f%%\n", produto.percentualLucro);
      printf("Fabricante: %s\n", produto.fabricante);
      printf("Estado: %s\n\n", produto.estado);
      encontrados++;
    }
  }

  if (encontrados == 0) {
    printf("Nenhum produto encontrado para o estado %s.\n", estado);
  }

  aguardarEnter();
}

void listarProdutosMarca(const char* marca) {
  limparTela();

  printf("==============================================================\n");
  printf("Lista de Produtos por Marca\n");
  printf("==============================================================\n\n");

  int encontrados = 0;
	int i;

  for (i = 0; i < numProdutos; i++) {
    Produto produto = produtos[i];

    if (strcmp(produto.fabricante, marca) == 0) {
      printf("Produto %d:\n", i + 1);
      printf("Descricao: %s\n", produto.descricao);
      printf("Peso: %.2f kg\n", produto.peso);
      printf("Valor de compra: R$ %.2f\n", produto.valorCompra);
      printf("Valor de venda: R$ %.2f\n", produto.valorVenda);
      printf("Lucro: R$ %.2f\n", produto.lucro);
      printf("Percentual de lucro: %.2f%%\n", produto.percentualLucro);
      printf("Fabricante: %s\n", produto.fabricante);
      printf("Estado: %s\n\n", produto.estado);
      encontrados++;
    }
  }

  if (encontrados == 0) {
    printf("Nenhum produto encontrado para a marca %s.\n", marca);
  }

  aguardarEnter();
}

void listarEstadoProdutoMaisCaro() {
  limparTela();

  printf("==============================================================\n");
  printf("Estado do Produto Mais Caro\n");
  printf("==============================================================\n\n");

  if (numProdutos == 0) {
    printf("Nenhum produto cadastrado.\n");
    aguardarEnter();
    return;
  }

  float maiorValor = produtos[0].valorVenda;
  int encontrados = 1;
  int i;

  for (i = 1; i < numProdutos; i++) {
    if (produtos[i].valorVenda > maiorValor) {
      maiorValor = produtos[i].valorVenda;
      encontrados = 1;
    } else if (produtos[i].valorVenda == maiorValor) {
      encontrados++;
    }
  }

  if (encontrados == 1) {
    for (i = 0; i < numProdutos; i++) {
      if (produtos[i].valorVenda == maiorValor) {
        printf("Produto %d:\n", i + 1);
        printf("Descricao: %s\n", produtos[i].descricao);
        printf("Peso: %.2f kg\n", produtos[i].peso);
        printf("Valor de compra: R$ %.2f\n", produtos[i].valorCompra);
        printf("Valor de venda: R$ %.2f\n", produtos[i].valorVenda);
        printf("Lucro: R$ %.2f\n", produtos[i].lucro);
        printf("Percentual de lucro: %.2f%%\n", produtos[i].percentualLucro);
        printf("Fabricante: %s\n", produtos[i].fabricante);
        printf("Estado: %s\n\n", produtos[i].estado);
        break;
      }
    }
  } else {
    printf("Mais de um produto registrado como o mais caro.\n");
  }

  aguardarEnter();
}

void listarFabricanteProdutoMaisBarato() {
  limparTela();

  printf("==============================================================\n");
  printf("Fabricante do Produto Mais Barato\n");
  printf("==============================================================\n\n");

  if (numProdutos == 0) {
    printf("Nenhum produto cadastrado.\n");
    aguardarEnter();
    return;
  }

  float menorValor = produtos[0].valorVenda;
  int encontrados = 1;
  int i;

  for (i = 1; i < numProdutos; i++) {
    if (produtos[i].valorVenda < menorValor) {
      menorValor = produtos[i].valorVenda;
      encontrados = 1;
    } else if (produtos[i].valorVenda == menorValor) {
      encontrados++;
    }
  }

  if (encontrados == 1) {
    for (i = 0; i < numProdutos; i++) {
      if (produtos[i].valorVenda == menorValor) {
        printf("Produto %d:\n", i + 1);
        printf("Descricao: %s\n", produtos[i].descricao);
        printf("Peso: %.2f kg\n", produtos[i].peso);
        printf("Valor de compra: R$ %.2f\n", produtos[i].valorCompra);
        printf("Valor de venda: R$ %.2f\n", produtos[i].valorVenda);
        printf("Lucro: R$ %.2f\n", produtos[i].lucro);
        printf("Percentual de lucro: %.2f%%\n", produtos[i].percentualLucro);
        printf("Fabricante: %s\n", produtos[i].fabricante);
        printf("Estado: %s\n\n", produtos[i].estado);
        break;
      }
    }
  } else {
    printf("Mais de um produto registrado como o mais barato.\n");
  }

  aguardarEnter();
}

void ordenarProdutosPorValor() {
  limparTela();

  printf("==============================================================\n");
  printf("Ordenar Produtos por Valor\n");
  printf("==============================================================\n\n");

  if (numProdutos == 0) {
    printf("Nenhum produto cadastrado.\n");
    aguardarEnter();
    return;
  }

  Produto produtosOrdenados[MAX_PRODUTOS];
  int i;
  int j;

  for (i = 0; i < numProdutos; i++) {
    produtosOrdenados[i] = produtos[i];
  }

  for (i = 0; i < numProdutos - 1; i++) {
    for (j = 0; j < numProdutos - i - 1; j++) {
      if (produtosOrdenados[j].valorVenda > produtosOrdenados[j + 1].valorVenda) {
        Produto temp = produtosOrdenados[j];
        produtosOrdenados[j] = produtosOrdenados[j + 1];
        produtosOrdenados[j + 1] = temp;
      }
    }
  }

  printf("Produtos ordenados por valor:\n\n");

  for (i = 0; i < numProdutos; i++) {
    Produto produto = produtosOrdenados[i];

    printf("Produto %d:\n", i + 1);
    printf("Descricao: %s\n", produto.descricao);
    printf("Peso: %.2f kg\n", produto.peso);
    printf("Valor de compra: R$ %.2f\n", produto.valorCompra);
    printf("Valor de venda: R$ %.2f\n", produto.valorVenda);
    printf("Lucro: R$ %.2f\n", produto.lucro);
    printf("Percentual de lucro: %.2f%%\n", produto.percentualLucro);
    printf("Fabricante: %s\n", produto.fabricante);
    printf("Estado: %s\n\n", produto.estado);
  }

  aguardarEnter();
}

void ordenarProdutosPorLucro() {
  limparTela();

  printf("==============================================================\n");
  printf("Ordenar Produtos por Lucro\n");
  printf("==============================================================\n\n");

  if (numProdutos == 0) {
    printf("Nenhum produto cadastrado.\n");
    aguardarEnter();
    return;
  }

  Produto produtosOrdenados[MAX_PRODUTOS];
  int i;
  int j;

  for (i = 0; i < numProdutos; i++) {
    produtosOrdenados[i] = produtos[i];
  }

  for (i = 0; i < numProdutos - 1; i++) {
    for (j = 0; j < numProdutos - i - 1; j++) {
      if (produtosOrdenados[j].lucro > produtosOrdenados[j + 1].lucro) {
        Produto temp = produtosOrdenados[j];
        produtosOrdenados[j] = produtosOrdenados[j + 1];
        produtosOrdenados[j + 1] = temp;
      }
    }
  }

  printf("Produtos ordenados por lucro:\n\n");

  for (i = 0; i < numProdutos; i++) {
    Produto produto = produtosOrdenados[i];

    printf("Produto %d:\n", i + 1);
    printf("Descricao: %s\n", produto.descricao);
    printf("Peso: %.2f kg\n", produto.peso);
    printf("Valor de compra: R$ %.2f\n", produto.valorCompra);
    printf("Valor de venda: R$ %.2f\n", produto.valorVenda);
    printf("Lucro: R$ %.2f\n", produto.lucro);
    printf("Percentual de lucro: %.2f%%\n", produto.percentualLucro);
    printf("Fabricante: %s\n", produto.fabricante);
    printf("Estado: %s\n\n", produto.estado);
  }

  aguardarEnter();
}

int main() {
  int opcao;

  do {
    limparTela();

    printf("==============================================================\n");
    printf("Controle de Produtos\n");
    printf("==============================================================\n\n");
    printf("1. Adicionar Produto\n");
    printf("2. Adicionar Fabricante\n");
    printf("3. Listar Produtos\n");
    printf("4. Listar Fabricantes\n");
    printf("5. Listar Produtos de um Estado\n");
    printf("6. Listar Produtos de uma Marca\n");
    printf("7. Apresentar Estado do Produto Mais Caro\n");
    printf("8. Apresentar Fabricante do Produto Mais Barato\n");
    printf("9. Listar Produtos em Ordem Crescente de Valor\n");
    printf("10. Listar Produtos em Ordem Crescente de Maior Valor do Lucro\n");
    printf("0. Sair\n\n");
    printf("Escolha uma opcao: ");
    scanf("%d", &opcao);
    getchar();

    switch (opcao) {
      case 1:
        adicionarProduto();
        break;
      case 2:
        adicionarFabricante();
        break;
      case 3:
        listarProdutos();
        break;
      case 4:
        listarMarcas();
        break;
      case 5: {
        char estado[3];
        printf("Digite o estado: ");
        scanf("%s", estado);
        listarProdutosEstado(estado);
        break;
      }
      case 6: {
        char marca[50];
        printf("Digite a marca: ");
        fgets(marca, 50, stdin);
        marca[strcspn(marca, "\n")] = '\0';
        listarProdutosMarca(marca);
        break;
      }
      case 7:
        listarEstadoProdutoMaisCaro();
        break;
      case 8:
        listarFabricanteProdutoMaisBarato();
        break;
      case 9:
        ordenarProdutosPorValor();
        break;
      case 10:
        ordenarProdutosPorLucro();
        break;
      case 0:
        printf("Saindo...\n");
        break;
      default:
        printf("Opcao invalida!\n");
        break;
    }

  } while (opcao != 0);

  return 0;
}
